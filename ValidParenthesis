class Solution(object):
    def isValid(self, s):
        paren1 = ["(", "{", "["]
        paren2 = [")", "}", "]"]
        
        if len(s) % 2 != 0 or len(s) > 10000: 
            return(False)
            
        
        for char in s:  # Ensure all characters are valid parentheses
            if char not in paren1 and char not in paren2:
                return(False)
                break
        else:
            stack = []
            mapping = {')': '(', '}': '{', ']': '['}
            
            for char in s:
                if char in mapping:
                    if not stack or stack.pop() != mapping[char]:
                        return(False)
                        break
                else:
                    stack.append(char)
            else:
                return(True if not stack else False)
